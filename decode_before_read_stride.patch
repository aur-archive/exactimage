Description: Decode image before accessing the stride attribute for rotation
Bug-Debian: http://bugs.debian.org/523948
Author: Sven Eckelmann <sven@narfation.org>

---
diff --git a/lib/rotate.cc b/lib/rotate.cc
index 86c639e4fa7cbd0ad158b785184b258300dac691..4c05ad6c8a052b59a53f2807189b4935e90aa230 100644
--- a/lib/rotate.cc
+++ b/lib/rotate.cc
@@ -33,9 +33,9 @@ void flipX (Image& image)
   if (!image.isModified() && image.getCodec())
     if (image.getCodec()->flipX(image))
       return;
-  
-  const int stride = image.stride();
+
   uint8_t* data = image.getRawData();
+  const int stride = image.stride();
   switch (image.spp * image.bps)
     {
     case 1:
@@ -103,9 +103,9 @@ void flipY (Image& image)
   if (!image.isModified() && image.getCodec())
     if (image.getCodec()->flipY(image))
       return;
-  
-  const unsigned int bytes = image.stride();
+
   uint8_t* data = image.getRawData();
+  const unsigned int bytes = image.stride();
   for (int y = 0; y < image.h / 2; ++y)
     {
       int y2 = image.h - y - 1;
@@ -128,10 +128,9 @@ void rot90 (Image& image, int angle)
   bool cw = false; // clock-wise
   if (angle == 90)
     cw = true; // else 270 or -90 or whatever and thus counter cw
-  
-  int rot_stride = (image.h * image.spp * image.bps + 7) / 8;
    
   uint8_t* data = image.getRawData();
+  int rot_stride = (image.h * image.spp * image.bps + 7) / 8;
   uint8_t* rot_data = (uint8_t*) malloc(rot_stride * image.w);
   
   switch (image.spp * image.bps)
